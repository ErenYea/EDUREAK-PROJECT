{"version":3,"sources":["app.js"],"names":["express","require","routes","path","bodyParser","http","logger","nano","urlencoded","use","app","json","env","PORT","set","join","__dirname","methodOverride","index","db","create","req","body","dbname","err","get","send","res","name","phone","header","crazy","revs_info","console","log","alldoc","post","destroy","_rev","listen"],"mappings":"aAAA,IAAIA,QAAUC,QAAQ,WAClBC,OAASD,QAAQ,YADjBD,KAAOC,QAAGA,QAGVE,KAAOF,QAAQ,QAFfC,WAASD,QAAQ,OAIjBG,WAAaH,QAAQ,eAHrBI,KAAOJ,QAAQ,QAKfK,OAASL,QAAQ,UAJjBE,eAAeF,QAAnB,mBAMIM,KAAON,QAAQ,OAARA,CAAgB,2CALvBO,GAAAA,KAAUC,IAAGR,WACbG,IAAAA,UACJM,IAAIC,IAAI,OAAGV,QAAQW,IAAnBC,MAAA,KASAH,IAAII,IAAI,QAASX,KAAKY,KAAKC,UAAW,UARtCN,IAAIJ,IAAAA,cAAiB,QACrBI,IAAIO,IAAAA,WAAcN,QAWlBD,IAAID,IAAIL,WAAWI,cAVnBE,IAAIH,IAAIU,kBAYRP,IAAID,IAAIT,QAAO,OAAQG,KAAKY,KAAKC,UAAW,YAT5CN,IAAIA,IAAG,IAAGV,OAAVkB,OAGAR,IAAII,KAAI,YAAcC,SAAAA,EAAKC,GAC3BN,KAAAS,GAAQC,OAAAC,EAARC,KAAuBC,OAAvB,SAAAC,GAEQpB,EACJK,EAAIL,KAAAA,+BAARiB,EAAAC,KAAAC,QAIIE,EAAIC,KAAKxB,YAAbmB,EAAAC,KAAAC,OAAA,2BAKMI,IAAAA,KAAG,eAAM,SAAAN,EAAAM,GACT,IAAAC,EAAAP,EAAAC,KAAAM,KACDC,EAAAR,EAAAC,KAAAO,MACDF,GAAAA,OAAA,CAASC,KAAAA,EAAAC,MAAAA,EAAcR,OAAIC,GAAlBO,EAAgC,SAAAL,EAAAF,EAAAQ,GAL3CN,EADFG,EAAAD,KAAA,0BAYEC,EAAIE,KAAK,mCAEgBE,IAAAA,KAAK,gBAAE,SAAAV,EAAAM,GAAtB,IAA8BE,EAAO,8BAC7CV,GAAAM,IAAID,EAAKF,KAAAO,MAAA,CAAAG,WAAA,GAAA,SAAAR,EAAAF,GACPK,GACAM,QAAAC,IAAAZ,GAYEA,EAVJK,GAAS,QAAAL,EAAAM,KAAA,qBAATN,EAAAO,MATJM,EAAA,mBAcER,EAAIQ,KAAMA,OAERzB,IAAA0B,KAAIZ,kBAAK,SAAAH,EAAAM,GACPM,GAAAA,IAAAA,EAAOX,KAAKA,MAAZ,CAAAU,WAAA,GAAA,SAAAR,EAAAF,GACDE,GAaCL,GAAGkB,QAAQhB,EAAIC,KAAKO,MAAOP,EAAKgB,KAAM,SAACd,EAAKF,GAZ9CE,EACEW,EAAMT,KAAI,0BAGXC,EAAAD,KAAA,sCAMHP,KAAGM,aAAaI,KAAhBU,OAAuB7B,IAAAe,IAAA,QAAA,WAAEO,QAAAA,IAAS,oCAAEtB,IAAAe,IAAA","file":"app.min.js","sourcesContent":["var express = require(\"express\");\r\nvar routes = require(\"./routes\");\r\nvar http = require(\"http\");\r\nvar path = require(\"path\");\r\nvar urlencoded = require(\"url\");\r\nvar bodyParser = require(\"body-parser\");\r\nvar json = require(\"json\");\r\nvar logger = require(\"logger\");\r\nvar methodOverride = require(\"method-override\");\r\nvar nano = require(\"nano\")(\"http://drstone:loveisone@localhost:5984\");\r\nvar db = nano.use(\"address\");\r\n\r\nvar app = express();\r\n\r\napp.set(\"port\", process.env.PORT || 3000);\r\napp.set(\"views\", path.join(__dirname, \"views\"));\r\napp.set(\"view engine\", \"jade\");\r\n\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded());\r\napp.use(methodOverride());\r\napp.use(express.static(path.join(__dirname, \"public\")));\r\n\r\napp.get(\"/\", routes.index);\r\n\r\napp.post(\"/createdb\", (req, res) => {\r\n  nano.db.create(req.body.dbname, (err) => {\r\n    if (err) {\r\n      res.send(\"Error careating the Database\" + req.body.dbname);\r\n      return;\r\n    }\r\n    res.send(\"Database \" + req.body.dbname + \"created succesfully\");\r\n  });\r\n});\r\n\r\napp.post(\"/new_contact\", (req, res) => {\r\n  var name = req.body.name;\r\n  var phone = req.body.phone;\r\n\r\n  db.insert({ name, phone, crazy: true }, phone, (err, body, header) => {\r\n    if (err) {\r\n      res.send(\"Error creating contact\");\r\n      return;\r\n    }\r\n    res.send(\"Contact created succesfully\");\r\n  });\r\n});\r\n\r\napp.post(\"/view_contact\", (req, res) => {\r\n  var alldoc = \"Follofwing are the contacts\";\r\n  db.get(req.body.phone, { revs_info: true }, (err, body) => {\r\n    if (err) {\r\n      console.log(body);\r\n    }\r\n    if (body) {\r\n      alldoc += \"Nmae:\" + body.name + \"<br/>Phone Number:\" + body.phone;\r\n    } else {\r\n      alldoc = \"No records found\";\r\n    }\r\n    res.send(alldoc);\r\n  });\r\n});\r\n\r\napp.post(\"/delete_contact\", (req, res) => {\r\n  db.get(req.body.phone, { revs_info: true }, (err, body) => {\r\n    if (err) {\r\n      db.destroy(req.body.phone, body._rev, (err, body) => {\r\n        if (err) {\r\n          res.send(\"Error deleting contact\");\r\n          return;\r\n        }\r\n        res.send(\"Contacts deleted succesfully\");\r\n      });\r\n    }\r\n  });\r\n});\r\n\r\nhttp.createServer(app).listen(app.get(\"port\"), () => {\r\n  console.log(\"Express server listeninig on port\" + app.get(\"port\"));\r\n});\r\n"]}